name: docker-compose-dev
services:
  postgres:
    image: postgres:16
    container_name: postgres-root-dev
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:3.9
    container_name: kafka-root-dev
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LOG4J_LOGGERS: kafka.controller=ERROR,kafka.producer.async.DefaultEventHandler=ERROR,state.change.logger=ERROR
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui-root-dev
    depends_on:
      - kafka
    ports:
      - "8000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: solon
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      LOGGING_LEVEL_ROOT: ERROR
      LOGGING_LEVEL_COM_PROVECTUS: ERROR

  person-service:
    build:
      context: ./01-person-service
      dockerfile: Dockerfile.dev
    container_name: person-service-root-dev
    depends_on:
      - postgres
      - kafka
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod

  cron-service:
    build:
      context: ./02-cron-service
      dockerfile: Dockerfile.dev
    container_name: cron-service-root-dev
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: prod

volumes:
  postgres_data:
